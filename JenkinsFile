
pipeline {
    agent any
    environment {
        // You can define any global environment variables here if necessary
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/packet2044/Portfolio.git',
                    credentialsId: 'PAT'
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    try {
                        sh 'npm install'
                    } catch (Exception e) {
                        echo "Error during npm install: ${e.message}"
                        currentBuild.result = 'UNSTABLE'  // Mark as unstable but continue
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    try {
                        sh 'npm run build'
                    } catch (Exception e) {
                        echo "Error during build: ${e.message}"
                        currentBuild.result = 'UNSTABLE'  // Mark as unstable but continue
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        sh 'npm test --passWithNoTests'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    if (currentBuild.result == 'SUCCESS') {
                        echo 'Deploying to production...'
                        sh 'npm start'
                    } else {
                        echo 'Skipping deployment due to failed build or tests.'
                    }
                }
            }
        }
    }
    post {
        always {
            echo "Cleaning up after the build."
        }
        success {
            echo "Build and deployment were successful."
        }
        failure {
            echo "Build failed. Please check the logs for details."
        }
    }
}
